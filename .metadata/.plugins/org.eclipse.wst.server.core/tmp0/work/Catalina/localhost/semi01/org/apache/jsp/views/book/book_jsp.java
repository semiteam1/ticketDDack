/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-07 04:46:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.book;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Locale;
import java.time.format.TextStyle;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.StringTokenizer;
import com.kh.semi01.user.model.vo.Grade;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.text.DecimalFormat;
import com.kh.semi01.book.model.vo.BookNPayment;
import com.kh.semi01.book.model.dao.BookNPaymentDao;
import com.kh.semi01.user.model.vo.User;
import com.kh.semi01.product.model.vo.Product;
import com.kh.semi01.user.model.service.UserService;
import com.kh.semi01.user.model.vo.Book;

public final class book_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.semi01.user.model.service.UserService");
    _jspx_imports_classes.add("com.kh.semi01.user.model.vo.Grade");
    _jspx_imports_classes.add("java.time.format.TextStyle");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.kh.semi01.book.model.vo.BookNPayment");
    _jspx_imports_classes.add("com.kh.semi01.book.model.dao.BookNPaymentDao");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("com.kh.semi01.user.model.vo.Book");
    _jspx_imports_classes.add("com.kh.semi01.product.model.vo.Product");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("java.util.StringTokenizer");
    _jspx_imports_classes.add("java.time.DayOfWeek");
    _jspx_imports_classes.add("java.time.LocalDate");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("com.kh.semi01.user.model.vo.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	String contextPath = request.getContextPath();

	User loginMember = (User)request.getAttribute("loginMember");
	
	String grade_name = loginMember.getGrade();
	
	//Grade g = (Grade)request.getAttribute("g");
	
	double grade_discount = (grade_name.equals("아이언"))? 0 : (grade_name.equals("브론즈"))? 0.01 : (grade_name.equals("실버"))? 0.05 : (grade_name.equals("골드"))? 0.1 : 0.15; 
	
	//double grade_discount = g.getGradeDiscount();
	
	String discountPer = (int)(grade_discount * 100) + "%";
	
	Product p = (Product)request.getAttribute("p");
	
	DecimalFormat df = new DecimalFormat("###,###,###");
	
	String originPrice = df.format(p.getPrice());
	
	String bookPrice = df.format(p.getPrice() - ((int)p.getPrice() * grade_discount));
	
	BookNPayment bp = (BookNPayment)request.getAttribute("bp");
	
	StringTokenizer st = new StringTokenizer(bp.getBookedDate(), "-");
	
	ArrayList<String> list = new ArrayList<>();
	
	while(st.hasMoreTokens()) {
		list.add(st.nextToken());
	}
	
	LocalDate date = LocalDate.of(Integer.parseInt(list.get(0)), Integer.parseInt(list.get(1)), Integer.parseInt(list.get(2)));
	
	String day = date.getDayOfWeek().getDisplayName(TextStyle.SHORT, Locale.KOREAN);


      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>티켓딱대</title>\n");
      out.write("<!-- Latest compiled and minified CSS -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\n");
      out.write("\n");
      out.write("<!-- jQuery library -->\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Popper JS -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Latest compiled JavaScript -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("<style>\n");
      out.write("	div {\n");
      out.write("		/* border: 1px solid red; */\n");
      out.write("	}\n");
      out.write("	.outer {\n");
      out.write("		height: 900px;\n");
      out.write("	}\n");
      out.write("	.outer>div {\n");
      out.write("		width: 100%;\n");
      out.write("	}\n");
      out.write("	#logo {\n");
      out.write("		height: 12%;\n");
      out.write("	}\n");
      out.write("	#book-info {\n");
      out.write("		height: 28%;\n");
      out.write("		line-height: 2;\n");
      out.write("		border-bottom: 1px solid #cecece;\n");
      out.write("		padding-bottom: 20px;\n");
      out.write("	}\n");
      out.write("	#product-info {\n");
      out.write("		height: 20%;\n");
      out.write("		line-height: 2;\n");
      out.write("		border-bottom: 1px solid #cecece;\n");
      out.write("		padding-bottom: 20px;\n");
      out.write("	} \n");
      out.write("	h6 {\n");
      out.write("		margin: 20px;\n");
      out.write("		font-weight: bold;\n");
      out.write("	}\n");
      out.write("	th {\n");
      out.write("		width: 150px;\n");
      out.write("		text-align: center;\n");
      out.write("	}\n");
      out.write("	#user-info {\n");
      out.write("		height: 50%;\n");
      out.write("		line-height: 2;\n");
      out.write("	}\n");
      out.write("	#payBtn {\n");
      out.write("		width: 100%;\n");
      out.write("		margin-top: 20px;\n");
      out.write("	}\n");
      out.write("	#payBtn>button {\n");
      out.write("		margin: 10px;\n");
      out.write("        display: block;\n");
      out.write("        height: 35px;\n");
      out.write("        padding: 0 12px;\n");
      out.write("        line-height: 32px;\n");
      out.write("        border-radius: 3px;\n");
      out.write("        border: 1px solid #bbb;\n");
      out.write("        box-sizing: border-box;\n");
      out.write("        background-color: #f9f9f9;\n");
      out.write("        text-decoration: none;\n");
      out.write("        text-align: center;\n");
      out.write("        font-size: 13px;\n");
      out.write("        color: #202020;\n");
      out.write("	}\n");
      out.write("	#payBtn>button:hover {\n");
      out.write("		cursor: pointer;\n");
      out.write("		opacity: 0.7;\n");
      out.write("	}\n");
      out.write("	#credit {\n");
      out.write("		display: none;\n");
      out.write("	}\n");
      out.write("	th, td {\n");
      out.write("		border: 1px  solid #cecece;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"outer\" align=\"center\">\n");
      out.write("		<div id=\"logo\" align=\"center\">\n");
      out.write("			<img width=\"200\" height=\"100\" src=\"resource/logo/logo.png\">\n");
      out.write("		</div>\n");
      out.write("		<form action=\"");
      out.print( contextPath );
      out.write("/payment.bo\" method=\"post\">\n");
      out.write("		\n");
      out.write("			<input type=\"hidden\" name=\"userNo\" value=\"");
      out.print( loginMember.getUserNo() );
      out.write("\">\n");
      out.write("			<input type=\"hidden\" name=\"productNo\" value=\"");
      out.print( p.getProductNo() );
      out.write("\">\n");
      out.write("			<input type=\"hidden\" name=\"screenDate\" value=\"");
      out.print( bp.getBookedDate() );
      out.write("\">\n");
      out.write("			<input type=\"hidden\" name=\"screenTime\" value=\"");
      out.print( bp.getScreenTime() );
      out.write("\">\n");
      out.write("			\n");
      out.write("			<input type=\"hidden\" name=\"userName\" value=\"");
      out.print( loginMember.getUserName() );
      out.write("\">\n");
      out.write("			<input type=\"hidden\" name=\"price\">\n");
      out.write("			\n");
      out.write("			<div id=\"book-info\">\n");
      out.write("				<h6>예매 정보 확인</h6>\n");
      out.write("				<table>\n");
      out.write("					<tr>\n");
      out.write("						<th>관람 인원수</th>\n");
      out.write("						<td colspan=\"2\">\n");
      out.write("							<select name=\"audience\" id=\"audience\" onchange=\"chooseAudience(this.value);\">\n");
      out.write("								<option value=\"1\">1명</option>\n");
      out.write("								<option value=\"2\">2명</option>\n");
      out.write("								<option value=\"3\">3명</option>\n");
      out.write("								<option value=\"4\">4명</option>\n");
      out.write("							</select>\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>결제수단</th>\n");
      out.write("						<td>\n");
      out.write("							<select name=\"payment\" id=\"payment\" onchange=\"payTool(this.value);\">\n");
      out.write("								<option value=\"10\">계좌이체</option>\n");
      out.write("								<option value=\"20\">신용카드</option>\n");
      out.write("							</select>\n");
      out.write("						</td>\n");
      out.write("						<td id=\"credit\">\n");
      out.write("							<select disabled name=\"card\" id=\"card\">\n");
      out.write("								<option value=\"10\">카드종류를 선택하세요</option>\n");
      out.write("								<option value=\"21\">국민카드</option>\n");
      out.write("								<option value=\"22\">신한카드</option>\n");
      out.write("								<option value=\"23\">우리카드</option>\n");
      out.write("								<option value=\"24\">하나카드</option>\n");
      out.write("								<option value=\"25\">현대카드</option>\n");
      out.write("								<option value=\"26\">삼성카드</option>\n");
      out.write("							</select>\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>할인</th>\n");
      out.write("						<td colspan=\"2\">\n");
      out.write("							<b style=\"color: red;\"><u>");
      out.print( grade_name );
      out.write("</u></b>등급 할인 <b style=\"color: red;\"><u>");
      out.print( discountPer );
      out.write("</u></b> 적용\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>티켓 수령방법</th>\n");
      out.write("						<td colspan=\"2\">현장수령</td>\n");
      out.write("					</tr>\n");
      out.write("				</table>\n");
      out.write("			</div>\n");
      out.write("			<div id=\"product-info\">\n");
      out.write("				<h6>공연 정보 확인</h6>\n");
      out.write("				<table>\n");
      out.write("					<tr>\n");
      out.write("						<th>공연 제목</th>\n");
      out.write("						<td>");
      out.print( p.getProductTitle() );
      out.write("</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>공연 장소</th>\n");
      out.write("						<td>");
      out.print( p.getAddress() );
      out.write("</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>공연 일시</th>\n");
      out.write("						<td>");
      out.print( bp.getBookedDate() );
      out.write('(');
      out.print( day );
      out.write(')');
      out.write(' ');
      out.print( bp.getScreenTime() );
      out.write("</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>가격</th>\n");
      out.write("						<td><span id=\"bookPrice\">");
      out.print( bookPrice );
      out.write("</span>원 (<span id=\"originPrice\">");
      out.print( originPrice );
      out.write("</span>원 - ");
      out.print( grade_name );
      out.write(" 등급 ");
      out.print( discountPer );
      out.write(" 할인 금액)</td>\n");
      out.write("					</tr>\n");
      out.write("				</table>\n");
      out.write("			</div>\n");
      out.write("			<div id=\"user-info\">\n");
      out.write("				<h6>주문자 정보 확인</h6>\n");
      out.write("				<table>\n");
      out.write("					<tr>\n");
      out.write("						<th>이름</th>\n");
      out.write("						<td>");
      out.print( loginMember.getUserName() );
      out.write("</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>생년월일</th>\n");
      out.write("						<td><input type=\"date\" name=\"inputBirth\" required></td>\n");
      out.write("						<input type=\"hidden\" name=\"userBirth\" value=\"");
      out.print( loginMember.getUserBirth() );
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>전화번호</th>\n");
      out.write("						<td>");
      out.print( loginMember.getPhone() );
      out.write("</td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>이메일</th>\n");
      out.write("						<td>");
      out.print( (loginMember.getEmail() == null)? "" : loginMember.getEmail() );
      out.write("</td>\n");
      out.write("					</tr>\n");
      out.write("				</table>\n");
      out.write("			</div>\n");
      out.write("			<div id=\"payBtn\" align=\"center\">\n");
      out.write("				<button type=\"submit\" onclick=\"return checkInfo();\">결제하기</button>\n");
      out.write("			</div>\n");
      out.write("		</form>\n");
      out.write("\n");
      out.write("		<script>\n");
      out.write("\n");
      out.write("			function payTool(value) {\n");
      out.write("\n");
      out.write("				if(value == 20) {\n");
      out.write("					$(\"#credit\").css(\"display\", \"block\");\n");
      out.write("					alert(\"죄송합니다. 현재는 계좌이체로만 결제가 가능합니다.\");\n");
      out.write("				}\n");
      out.write("				else {\n");
      out.write("					$(\"#credit\").css(\"display\", \"none\");\n");
      out.write("				}\n");
      out.write("\n");
      out.write("			}\n");
      out.write("			\n");
      out.write("			function chooseAudience(num) {\n");
      out.write("				\n");
      out.write("				let audience = num;\n");
      out.write("				const price = ");
      out.print( p.getPrice() );
      out.write(";\n");
      out.write("				const discount = ");
      out.print( grade_discount );
      out.write(";\n");
      out.write("				\n");
      out.write("				$(\"#originPrice\").text((price * audience).toLocaleString());\n");
      out.write("				\n");
      out.write("				$(\"#bookPrice\").text(((price * audience) * (1 - discount)).toLocaleString());\n");
      out.write("				\n");
      out.write("				$(\"input[name=price]\").val(((price * audience) * (1 - discount)).toLocaleString());\n");
      out.write("				\n");
      out.write("			}\n");
      out.write("\n");
      out.write("			function checkInfo() {\n");
      out.write("				\n");
      out.write("				if($(\"input[name=inputBirth]\").val() == $(\"input[name=userBirth]\").val()) {\n");
      out.write("					\n");
      out.write("					return confirm(\"예매 관련 정보를 모두 확인하셨나요?\");\n");
      out.write("					\n");
      out.write("				}\n");
      out.write("				else {\n");
      out.write("					\n");
      out.write("					alert(\"생년월일을 잘못 입력하셨습니다.\");\n");
      out.write("					\n");
      out.write("					$(\"input[name=userBirth]\").focus();\n");
      out.write("					\n");
      out.write("					return false;\n");
      out.write("					\n");
      out.write("				}\n");
      out.write("\n");
      out.write("			}\n");
      out.write("\n");
      out.write("		</script>\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	<!-- <iframe\n");
      out.write("		id=\"inlineFrameExample\"\n");
      out.write("		title=\"Inline Frame Example\"\n");
      out.write("		width=\"300\"\n");
      out.write("		height=\"200\"\n");
      out.write("		src=\"https://www.openstreetmap.org/export/embed.html?bbox=-0.004017949104309083%2C51.47612752641776%2C0.00030577182769775396%2C51.478569861898606&layer=mapnik\"\n");
      out.write("		>\n");
      out.write("	</iframe> -->\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
